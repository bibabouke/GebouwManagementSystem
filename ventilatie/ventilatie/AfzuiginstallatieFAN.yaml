# Afzuiginstallatie Temperatuurregeling v2.7FANdirClean
# ----------------------------------------------------
# Toegevoegd in v2.7:
# - Override-knop ondersteunt nu meerdere typen (input_boolean, switch, binary_sensor, sensor)
# - Je kunt nu ook een virtuele schakelaar gebruiken als override-trigger
# - Alles verder ongewijzigd t.o.v. v2.6

blueprint:
  name: Afzuiginstallatie Temperatuurregeling v2.7FANdirClean
  description: Regelt afzuiging op basis van binnen- en buitentemperatuur, met handmatige override.
  domain: automation

  input:
    fan:
      name: Ventilator
      selector:
        entity:
          domain: fan

    binnen_temp_sensor:
      name: Binnen temperatuur
      selector:
        entity:
          domain: sensor

    buiten_temp_sensor:
      name: Buiten temperatuur
      selector:
        entity:
          domain: sensor

    controle_binnen_sensor:
      name: Extra binnentemperatuursensor
      selector:
        entity:
          domain: sensor

    richttemperatuur:
      name: Richttemperatuur
      default: 18.5
      selector:
        number:
          min: 10
          max: 30
          step: 0.5
          unit_of_measurement: "°C"

    marge:
      name: Marge
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 2
          step: 0.1
          unit_of_measurement: "°C"

    richting:
      name: Ventilatorrichting
      default: "reverse"
      selector:
        select:
          options:
            - forward
            - reverse

    override_knop:
      name: Override knop (HUE of virtuele schakelaar)
      selector:
        entity:
          domain:
            - sensor
            - binary_sensor
            - input_boolean
            - switch

    override_duration:
      name: Override-duur (uren)
      default: 2
      selector:
        number:
          min: 1
          max: 24
          unit_of_measurement: "uren"

    flash_lamp:
      name: Signaallamp bij override
      selector:
        entity:
          domain: light

trigger:
  - platform: state
    entity_id: !input binnen_temp_sensor
    for: "00:01:00"

  - platform: state
    entity_id: !input buiten_temp_sensor
    for: "00:01:00"

  - platform: state
    entity_id: !input override_knop

variables:
  fan_id: !input fan
  binnen_temp_sensor_id: !input binnen_temp_sensor
  buiten_temp_sensor_id: !input buiten_temp_sensor
  controle_binnen_sensor_id: !input controle_binnen_sensor
  richt: !input richttemperatuur
  marge: !input marge
  richting: !input richting
  override_duration: !input override_duration
  flash_lamp: !input flash_lamp

  binnen: >
    {{ states(binnen_temp_sensor_id) | float(0) }}
  buiten: >
    {{ states(buiten_temp_sensor_id) | float(0) }}
  controlebinnen: >
    {{ states(controle_binnen_sensor_id) | float(21.0) }}
  verschil: >
    {{ binnen - buiten }}

condition: []

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input override_knop
            state: "on"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input flash_lamp
          - delay:
              seconds: 1
          - service: light.turn_off
            target:
              entity_id: !input flash_lamp
          - delay:
              hours: !input override_duration

  - service: system_log.write
    data:
      level: info
      message: >
        Afzuigcontrole: Binnen={{ binnen }}°C, Buiten={{ buiten }}°C, Verschil={{ verschil }}°C, Richt={{ richt }}°C, Controlebinnen={{ controlebinnen }}°C, Richting={{ richting }}

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ verschil > 1.5 and buiten < controlebinnen and binnen > richt + marge }}"
        sequence:
          - service: fan.set_percentage
            target:
              entity_id: "{{ fan_id }}"
            data:
              percentage: >
                {% if richting == 'reverse' %} 50 {% else %} 100 {% endif %}

      - conditions:
          - condition: template
            value_template: "{{ verschil > 0.8 and verschil <= 1.5 and buiten < controlebinnen and binnen > richt + marge }}"
        sequence:
          - service: fan.set_percentage
            target:
              entity_id: "{{ fan_id }}"
            data:
              percentage: >
                {% if richting == 'reverse' %} 35 {% else %} 66 {% endif %}

      - conditions:
          - condition: template
            value_template: "{{ verschil > 0 and verschil <= 0.8 and buiten < controlebinnen and binnen > richt + marge }}"
        sequence:
          - service: fan.set_percentage
            target:
              entity_id: "{{ fan_id }}"
            data:
              percentage: >
                {% if richting == 'reverse' %} 25 {% else %} 33 {% endif %}

      - conditions:
          - condition: template
            value_template: "{{ verschil <= 0 or buiten >= controlebinnen or binnen <= (richt - marge) }}"
          - condition: template
            value_template: "{{ state_attr(fan_id, 'percentage') | int(0) > 0 }}"
          - condition: template
            value_template: "{{ (now() - states[fan_id].last_changed).total_seconds() > 300 }}"
        sequence:
          - service: fan.turn_off
            target:
              entity_id: "{{ fan_id }}"
          - delay: "00:03:00"

mode: single
