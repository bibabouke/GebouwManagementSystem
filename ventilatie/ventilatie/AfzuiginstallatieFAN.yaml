blueprint:
  name: Afzuiginstallatie Temperatuurregeling v2.4fandir Stable
  description: >
    Regelt de afzuiginstallatie afhankelijk van temperatuurverschillen.
    Werkt met een fan-entiteit (bijv. Zigbee-ventilator met snelheidsregeling).
    Alleen actief als buitenlucht koeler is dan binnenlucht én temperatuur boven richtpunt ligt.
    Je kunt kiezen of de ventilator lucht naar binnen (verwarmen) of naar buiten (koelen) blaast.

  domain: automation

  input:
    binnen_temp_sensor:
      name: "Primaire Binnentemperatuursensor"
      description: "Sensor voor de temperatuur in de ruimte die wordt afgevoerd."
      selector:
        entity:
          domain: sensor
          device_class: temperature

    controle_binnen_sensor:
      name: "Vergelijkingssensor Binnen (optioneel)"
      description: >
        Sensor voor andere binnenruimte (bijv. woonkamer), zodat er geen warme buitenlucht
        wordt aangezogen als het buiten warmer is dan binnen.
      default: ""
      selector:
        entity:
          domain: sensor
          device_class: temperature

    buiten_temp_sensor:
      name: "Buitentemperatuursensor"
      description: "Sensor of weersensor met buitentemperatuur in een attribuut of state."
      selector:
        entity:
          domain: sensor

    buiten_temp_attribute:
      name: "Optioneel: Attribuut voor buitentemperatuur"
      description: "Laat leeg als de sensor de temperatuur direct als state bevat."
      default: ""
      selector:
        text:

    afzuiginstallatie_fan:
      name: "Afzuiginstallatie Ventilator"
      description: "Ventilator-entiteit die de afzuiging aanstuurt via percentage."
      selector:
        entity:
          domain: fan

    fan_direction:
      name: "Ventilatorrichting (verwarmen of koelen)"
      description: >
        Kies de draairichting van de ventilator.  
        'Forward' = lucht blazen richting kamer (verwarmen).  
        'Reverse' = lucht aanzuigen vanaf buiten (koelen).
      default: reverse
      selector:
        select:
          options:
            - label: "Koelen (lucht aanzuigen van buiten)"
              value: reverse
            - label: "Verwarmen (lucht naar binnen blazen)"
              value: forward

    richttemperatuur:
      name: "Richttemperatuur binnen"
      default: 21.0
      selector:
        number:
          min: 10
          max: 30
          step: 0.5
          unit_of_measurement: "°C"

    hysteresis:
      name: "Hysteresis"
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 5.0
          step: 0.1
          unit_of_measurement: "°C"

triggers:
  - platform: state
    entity_id: !input binnen_temp_sensor
    for: "00:01:00"
  - platform: state
    entity_id: !input buiten_temp_sensor
    for: "00:01:00"

conditions: []

actions:
  - variables:
      fan_id: !input afzuiginstallatie_fan
      binnen_temp_sensor_id: !input binnen_temp_sensor
      buiten_temp_sensor_id: !input buiten_temp_sensor
      controle_binnen_sensor_id: !input controle_binnen_sensor
      buiten_temp_attr: !input buiten_temp_attribute
      richt: !input richttemperatuur
      marge: !input hysteresis
      richting: !input fan_direction

      binnen: >
        {{ states(binnen_temp_sensor_id) | float(0) }}

      buiten: >
        {% if buiten_temp_attr %}
          {{ state_attr(buiten_temp_sensor_id, buiten_temp_attr) | float(0) }}
        {% else %}
          {{ states(buiten_temp_sensor_id) | float(0) }}
        {% endif %}

      controlebinnen: >
        {% if controle_binnen_sensor_id %}
          {{ states(controle_binnen_sensor_id) | float(21.0) }}
        {% else %}
          {{ 21.0 }}
        {% endif %}

      verschil: "{{ binnen - buiten }}"

  - service: system_log.write
    data:
      level: info
      message: >
        Afzuigcontrole: Binnen={{ binnen }}°C, Buiten={{ buiten }}°C, Verschil={{ verschil }}°C, Richt={{ richt }}°C, Controlebinnen={{ controlebinnen }}°C, Richting={{ richting }}

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not is_state(fan_id, 'off') }}"
        sequence:
          - service: fan.set_direction
            target:
              entity_id: "{{ fan_id }}"
            data:
              direction: "{{ richting }}"

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ verschil > 1.5 and buiten < controlebinnen and binnen > richt + marge }}"
        sequence:
          - condition: template
            value_template: "{{ buiten < controlebinnen and verschil > 0 and binnen > richt + marge }}"
          - service: fan.set_percentage
            target:
              entity_id: "{{ fan_id }}"
            data:
              percentage: >
                {% if richting == 'reverse' %} 50 {% else %} 100 {% endif %}

      - conditions:
          - condition: template
            value_template: "{{ verschil > 0.8 and verschil <= 1.5 and buiten < controlebinnen and binnen > richt + marge }}"
        sequence:
          - condition: template
            value_template: "{{ buiten < controlebinnen and verschil > 0 and binnen > richt + marge }}"
          - service: fan.set_percentage
            target:
              entity_id: "{{ fan_id }}"
            data:
              percentage: >
                {% if richting == 'reverse' %} 35 {% else %} 66 {% endif %}

      - conditions:
          - condition: template
            value_template: "{{ verschil > 0 and verschil <= 0.8 and buiten < controlebinnen and binnen > richt + marge }}"
        sequence:
          - condition: template
            value_template: "{{ buiten < controlebinnen and verschil > 0 and binnen > richt + marge }}"
          - service: fan.set_percentage
            target:
              entity_id: "{{ fan_id }}"
            data:
              percentage: >
                {% if richting == 'reverse' %} 25 {% else %} 33 {% endif %}

      - conditions:
          - condition: template
            value_template: "{{ verschil <= 0 or buiten >= controlebinnen or binnen <= (richt - marge) }}"
          - condition: template
            value_template: "{{ state_attr(fan_id, 'percentage') | int(0) > 0 }}"
          - condition: template
            value_template: "{{ (now() - states[fan_id].last_changed).total_seconds() > 300 }}"
        sequence:
          - service: fan.turn_off
            target:
              entity_id: "{{ fan_id }}"
          - delay: "00:03:00"

mode: single
