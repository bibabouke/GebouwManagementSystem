blueprint:
  name: Afzuiginstallatie Temperatuurregeling v2.5FANdirClean
  description: >
    Automatische regeling van ventilator op basis van temperatuurverschillen binnen/buiten.
    Inclusief ondersteuning voor handmatige override via een knop, instelbare override-duur (in uren),
    en visuele feedback via signaallamp.
  domain: automation

  input:
    afzuiginstallatie_fan:
      name: Afzuigventilator
      selector:
        entity:
          domain: fan

    binnen_temp_sensor:
      name: Binnentemperatuursensor
      selector:
        entity:
          domain: sensor

    buiten_temp_sensor:
      name: Buitentemperatuursensor
      selector:
        entity:
          domain: sensor

    controle_binnen_sensor:
      name: Tweede binnentemperatuursensor (voor buiten warmer check)
      default: []
      selector:
        entity:
          domain: sensor

    override_switch:
      name: Override-schakelaar (input_boolean)
      selector:
        entity:
          domain: input_boolean

    override_duration_hours:
      name: Override-duur in uren
      default: 2
      selector:
        number:
          min: 1
          max: 24
          unit_of_measurement: "uur"

    override_button:
      name: HUE-knop of andere drukknop
      selector:
        entity:
          domain: sensor

    signaallamp:
      name: Signaallamp (knippert bij override)
      selector:
        entity:
          domain: light

    richttemperatuur:
      name: Richttemperatuur binnen
      default: 18.5
      selector:
        number:
          min: 5
          max: 30
          step: 0.5
          unit_of_measurement: '°C'

    marge:
      name: Marge rond richttemperatuur
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 5
          step: 0.1
          unit_of_measurement: '°C'

trigger:
  - platform: state
    entity_id: !input binnen_temp_sensor
    for: "00:01:00"
  - platform: state
    entity_id: !input buiten_temp_sensor
    for: "00:01:00"
  - platform: state
    entity_id: !input override_button

variables:
  fan_id: !input afzuiginstallatie_fan
  binnen_temp_sensor_id: !input binnen_temp_sensor
  buiten_temp_sensor_id: !input buiten_temp_sensor
  controle_binnen_sensor_id: !input controle_binnen_sensor
  override_switch_id: !input override_switch
  override_duration_hours: !input override_duration_hours
  richt: !input richttemperatuur
  marge: !input marge
  richting: reverse
  binnen: >
    {{ states(binnen_temp_sensor_id) | float(0) }}
  buiten: >
    {{ states(buiten_temp_sensor_id) | float(0) }}
  controlebinnen: >
    {% if controle_binnen_sensor_id %}
      {{ states(controle_binnen_sensor_id) | float(21.0) }}
    {% else %}
      {{ 21.0 }}
    {% endif %}
  verschil: >
    {{ binnen - buiten }}

condition: []

action:
  - choose:
      - conditions:
          - condition: trigger
            id: override_button
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: !input override_switch
          - service: light.turn_on
            target:
              entity_id: !input signaallamp
            data:
              flash: short
          - delay:
              hours: !input override_duration_hours
          - service: input_boolean.turn_off
            target:
              entity_id: !input override_switch

  - choose:
      - conditions:
          - condition: state
            entity_id: !input override_switch
            state: "on"
        sequence: []  # Override actief, niets doen

      - conditions:
          - condition: template
            value_template: "{{ binnen > richt + marge and buiten < controlebinnen }}"
        sequence:
          - service: fan.set_direction
            data:
              direction: "{{ richting }}"
            target:
              entity_id: "{{ fan_id }}"

          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ verschil > 1.5 }}"
                sequence:
                  - service: fan.set_percentage
                    data:
                      percentage: "{% if richting == 'reverse' %} 50 {% else %} 100 {% endif %}"
                    target:
                      entity_id: "{{ fan_id }}"

              - conditions:
                  - condition: template
                    value_template: "{{ verschil > 0.8 and verschil <= 1.5 }}"
                sequence:
                  - service: fan.set_percentage
                    data:
                      percentage: "{% if richting == 'reverse' %} 35 {% else %} 66 {% endif %}"
                    target:
                      entity_id: "{{ fan_id }}"

              - conditions:
                  - condition: template
                    value_template: "{{ verschil > 0 and verschil <= 0.8 }}"
                sequence:
                  - service: fan.set_percentage
                    data:
                      percentage: "{% if richting == 'reverse' %} 25 {% else %} 33 {% endif %}"
                    target:
                      entity_id: "{{ fan_id }}"

      - conditions:
          - condition: template
            value_template: "{{ verschil <= 0 or buiten >= controlebinnen or binnen <= (richt - marge) }}"
          - condition: template
            value_template: "{{ state_attr(fan_id, 'percentage') | int(0) > 0 }}"
          - condition: template
            value_template: "{{ (now() - states[fan_id].last_changed).total_seconds() > 300 }}"
        sequence:
          - service: fan.turn_off
            target:
              entity_id: "{{ fan_id }}"
          - delay: "00:03:00"

mode: single
